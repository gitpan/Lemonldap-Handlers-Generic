.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Generic4a2 3"
.TH Generic4a2 3 "2005-12-22" "perl v5.8.5" "User Contributed Perl Documentation"
.SH "NAME"
.Vb 1
\&    Lemonldap::Handlers::Generic  - Perl extension for Lemonldap sso system
.Ve
.PP
.Vb 2
\&    Lemonldap::Handlers::Generic4a2 - Handler for Apache2 Lemonldap SSO
\&    system
.Ve
.PP
.Vb 1
\&    Lemonldap::Handlers::Generic4a2SSL - Handler full SSL  Apache2 Lemonldap SSO
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In httpd.conf 
.PP
.Vb 3
\&  .....
\&  perltranshandler Lemonldap::Handlers::Generic4a2
\&  .....
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 5
\& Generic4a2 is the central piece of  websso framework .
\& This module provides several methods but the principal goal of this is the handler function .
\& It can be combined with mod_proxy or mod_rewrite and all other apache's  modules .
\& It provides also an built-in  http proxy with LWP .
\& see http://lemonldap.sf.net for more infos .
.Ve
.Sh "Parameters (see also doc folder)"
.IX Subsection "Parameters (see also doc folder)"
.Vb 1
\& A minimal configuration  must provide  infos about :
.Ve
.IP "config" 1
.IX Item "config"
.Vb 2
\&  LemonldapConfig "/foo/bar/file_config.xml"
\&  The filename of the mean XML Config   :It's REQUIRED
.Ve
.IP "domain" 1
.IX Item "domain"
.Vb 2
\& LemonldapDomain foo.bar
\& It fixes the value of domain for the  application protected by  this handler (see below)
.Ve
.IP "xml section in config" 1
.IX Item "xml section in config"
.Vb 1
\& LemonldapHandlerId  <xml section>
.Ve
.Sp
.Vb 1
\& It fixes the value of XML section in config
.Ve
.Sh "Example (a \s-1KISS\s0 example, see also eg folder)"
.IX Subsection "Example (a KISS example, see also eg folder)"
In httpd.conf 
.PP
.Vb 13
\& <virtualHost 127.0.0.1:80>
\& servername authen.demo.net
\& PerlModule Apache2::compat
\& PerlModule Bundle::Apache2
\& PerlModule Lemonldap::Handlers::Generic4a2 
\& perltranshandler Lemonldap::Handlers::Generic4a2
\& PerlSetVar LemonldapDomain demo.net
\& PerlSetVar LemonldapConfig /usr/local/apache/conf/application_new.xml
\& PerlSetVar LemonldapHandlerID myintranet
\& proxypass /intranet http://lemonldap.sourceforge.net
\& proxypassreverse /intranet  http://lemonldap.sourceforge.net
\& documentroot /usr/local/apache/htdocs
\& </virtualhost>
.Ve
.PP
.Vb 11
\& In /usr/local/apache/conf/application_new.xml
\&  <lemonconfig>
\&        <domain    id="demo.net"
\&                   Cookie="lemondemo"
\&                   >
\&        <handler 
\&                id="myintranet" 
\&                DisabledControl="1"
\&               />  
\&        </domain>
\&  </lemonconfig>
.Ve
.PP
.Vb 2
\& Now you can put http://authen.demo.net/intranet/ in your browser and you will see lemonldap's  site
\& AND now you can control who and where goes on your site .
.Ve
.PP
.Vb 1
\& You can pass parameters from httpd.conf with perlsetvar  facilities  or put them in xml file
.Ve
.Sh "Functions"
.IX Subsection "Functions"
.IP "handler" 1
.IX Item "handler"
.Vb 2
\& It's the mean  function which does all jobs . If the enebledproxy parameter is set to 1  ,this function
\& will push proxy_handler function reference on  the handler's stack . If not it returns DECLINED (mod_proxy will be actived)
.Ve
.IP "proxy_handler" 1
.IX Item "proxy_handler"
.Vb 2
\& It's the built-in proxy (LWP)  web embedded  in lemonldap framework . It is  actived by  enabledproxy parameter .
\& Some parameters are about this proxy and its behaviour
.Ve
.IP "_lemonldap_internal" 1
.IX Item "_lemonldap_internal"
.Vb 1
\&  append this keyword at the end of url and you will can see all config for a specific apache's child
.Ve
.IP "_lemonldap_debug" 1
.IX Item "_lemonldap_debug"
.Vb 2
\&  append this keyword at the end of url and you will can see all headers send to host.
\&  Available  ONLY with built-in proxy
.Ve
.Sh "Features"
.IX Subsection "Features"
Generic4a2 is build arround perl's modules .
.PP
Those modules are :
.IP "Utilities :" 1
.IX Item "Utilities :"
.Vb 1
\&  collection of function
.Ve
.IP "Core :" 1
.IX Item "Core :"
.Vb 1
\&  It provides basics services like the cache service, forge header service or authorization service.
.Ve
.Sp
.Vb 3
\& Core.pm  can use YOUR own services for all this cycle . It's plugger . Lemonldap framework is available 
\& with somes services but you can with Core.pm propose your schemas.
\& News parameters  were added in XML DTD in order to describe the sequence.
.Ve
.IP "MatrixPolicy :" 1
.IX Item "MatrixPolicy :"
.Vb 1
\& manage authorization process , based on the hash of session (like preceding version)
.Ve
.IP "Memsession :" 1
.IX Item "Memsession :"
.Vb 1
\& manage the backend of session (cache level 3)
.Ve
.IP "AuthorizationHeader :" 1
.IX Item "AuthorizationHeader :"
.Vb 1
\& manage the construction of header
.Ve
.IP "RewriteHTML :" 1
.IX Item "RewriteHTML :"
.Vb 2
\& Rewrite on fly html source in order to ajust somes tags like BASE , href or src
\& Available  ONLY with built-in proxy
.Ve
.PP
More features
.IX Subsection "More features"
.IP "Authentification" 1
.IX Item "Authentification"
.Vb 2
\& Keep in mind  that the handler doesn't know HOW authenticate anybody but only knows WHERE authenticate . 
\& The parameter 'portal' tells it where to send the authentification request.
.Ve
.IP "Caches" 1
.IX Item "Caches"
.Vb 1
\& Thre are three levels of cache in lemonldap .
.Ve
.Sp
.Vb 3
\& *First cache (level 1) is a very KISS  , it's a memory structure in the program .
\& *Next  cache (level 2) is realised by using berkeleyDB hash
\& *Last cache (level 3) is realised by using memcached (see Apache::Session::Memorycached on CPAN)
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fILemonldap\fR\|(3), Lemonldap::Portal::Standard
.PP
http://lemonldap.sourceforge.net/
.PP
\&\*(L"Writing Apache Modules with Perl and C\*(R" by Lincoln Stein & Doug
MacEachern \- O'\s-1REILLY\s0
.IP "Eric German, <germanlinux@yahoo.fr>" 1
.IX Item "Eric German, <germanlinux@yahoo.fr>"
.PD 0
.IP "Isabelle Serre, <isabelle.serre@justice.gouv.fr>" 1
.IX Item "Isabelle Serre, <isabelle.serre@justice.gouv.fr>"
.PD
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2004 by Eric German & Isabelle Serre
.PP
Lemonldap originaly written by Eric german who decided to publish him in 2003
under the terms of the \s-1GNU\s0 General Public License version 2.
.IP "This package is under the \s-1GNU\s0 General Public License, Version 2." 1
.IX Item "This package is under the GNU General Public License, Version 2."
.PD 0
.IP "The primary copyright holder is Eric German." 1
.IX Item "The primary copyright holder is Eric German."
.IP "Portions are copyrighted under the same license as Perl itself." 1
.IX Item "Portions are copyrighted under the same license as Perl itself."
.IP "Portions are copyrighted by Doug MacEachern and Lincoln Stein. This library is under the \s-1GNU\s0 General Public License, Version 2." 1
.IX Item "Portions are copyrighted by Doug MacEachern and Lincoln Stein. This library is under the GNU General Public License, Version 2."
.IP "Portage under Apache2 is made with help of : Ali Pouya and Shervin Ahmadi (\s-1MINEFI/DGI\s0)" 1
.IX Item "Portage under Apache2 is made with help of : Ali Pouya and Shervin Ahmadi (MINEFI/DGI)"
.PD
.PP
.Vb 3
\&  This program is free software; you can redistribute it and/or modify
\&  it under the terms of the GNU General Public License as published by
\&  the Free Software Foundation; version 2 dated June, 1991.
.Ve
.PP
.Vb 4
\&  This program is distributed in the hope that it will be useful,
\&  but WITHOUT ANY WARRANTY; without even the implied warranty of
\&  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\&  GNU General Public License for more details.
.Ve
.PP
.Vb 3
\&  A copy of the GNU General Public License is available in the source tree;
\&  if not, write to the Free Software Foundation, Inc.,
\&  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
.Ve
